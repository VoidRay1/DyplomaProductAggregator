version: "3.9"
services:
  django:
    container_name: 'backend_container'
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile
    volumes:
      - ./backend:/django_proj
    ports:
      - 8000:8000
    expose:
      - 8000
    depends_on:
      - redis
    links:
      - redis:redis
    networks:
      - postgres

  quasar:
    container_name: 'quasar_container'
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./compose/vue/Dockerfile
    volumes:
      - ./frontend:/vue_proj
    environment: 
      - CHOKIDAR_USEPOLLING=true
    ports:
      - 8080:8080
    expose:
      - 8080
    networks:
      - postgres

  redis:
    container_name: 'redis7_container'
    restart: unless-stopped
    image: redis:7.2-alpine3.19
    ports:
      - "6379:6379"
    networks:
      - postgres

  postgres:
    container_name: postgres14_container
    image: postgres:14.8-alpine3.18
    environment:
      POSTGRES_DB: "aggregatordb"
      POSTGRES_USER: "aggregatoruser"
      POSTGRES_PASSWORD: "qw12345"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./backend/fixtures:/docker-entrypoint-initdb.d
      - aggregatordb-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G      
    networks:
      - postgres

  pgadmin:
    container_name: pgadmin8_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "pguser@habr.com"
      PGADMIN_DEFAULT_PASSWORD: "pgadminpwd4"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 0.5G
    networks:
      - postgres

volumes:
  aggregatordb-data:
  pgadmin-data:

networks:
  postgres:
    driver: bridge